const {groupBy} = require('./groupBy');

describe ('groupBy test',()=> {
  test('Передаём объект с положительными числами', ()=> {expect(groupBy(x=>x, {a:1, b:2, c:5, d:2})).toEqual({'1':[1], '2':[2,2], '5':[5]})});
  test('Передаём объект с отрицательными числами', ()=> {expect(groupBy(x=>x, {a:-1, b:-2, c:-3})).toEqual({'-1':[-1], '-2':[-2], '-3':[-3]})});
  test('Передаём объект с положительными и отрицательными числами', ()=> {expect(groupBy(x=>x, {a:1, b:-2, c:-2})).toEqual({'1':[1], '-2':[-2,-2]})});

  test('Передаём объект со строками', ()=> {expect(groupBy(x=>x, {a:'a', b:'b', c:'d', d:'b'})).toEqual({'a':['a'], 'b':['b','b'], 'd':['d']})});
  test('Передаём объект со строками числами', ()=> {expect(groupBy(x=>x, {a:'1', b:'2', c:'3', d:'3'})).toEqual({'1':['1'], '2':['2'], '3':['3','3']})});
  test('Передаём объект со строками и числами', ()=> {expect(groupBy(x=>x, {a:'1', b:'a', c:'1', d:1, e:'b'})).toEqual({'1':['1','1', 1], 'a':['a'], 'b':['b']})});

  test('Передаём пустой объект', ()=> {expect(groupBy(x=>x, {})).toEqual({})});
  test('Передаём объект с объектами', ()=> {expect(groupBy(x=>x, {a:{d:1}, b:{d:1}, c:{e:2}})).toStrictEqual({'{d:1}':[{d:1},{d:1}], '{e:2}':[{e:2}]})});
});
